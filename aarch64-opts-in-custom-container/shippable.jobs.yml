jobs:

  - name: aarch64-opts-in-custom-container-base-env
    type: runSh
    runtime:
      architecture: aarch64
      cluster: x8664u16custom
      container: true
      options:
        imageName: drydockaarch64/u16pyt
        imageTag: master
        env:
          HELLO: world
    steps:
      - IN: aarch64-custom-container-trigger
      - TASK:
          name: system-facts
          script:
            - docker ps -a
            - export IMG=$(docker inspect --format='{{.Config.Image}}' reqExec.$BUILD_JOB_ID.0)
            - test "$IMG" == "drydockaarch64/u16pyt:master"
            - printenv
            - echo "$HELLO"
            - test "$HELLO" == "world"
            

  - name: aarch64-opts-in-custom-container-task-env
    type: runSh
    runtime:
      architecture: aarch64
      cluster: x8664u16custom
      container: true
    steps:
      - IN: aarch64-custom-container-trigger
      - TASK:
          name: system-facts
          runtime:
            options:
              imageName: drydockaarch64/u16pyt
              imageTag: master
              env:
                HELLO: world
          script:
            - docker ps -a
            - export IMG=$(docker inspect --format='{{.Config.Image}}' reqExec.$BUILD_JOB_ID.0)
            - test "$IMG" == "drydockaarch64/u16pyt:master"
            - printenv
            - echo "$HELLO"
            - test "$HELLO" == "world"

  - name: aarch64-opts-in-custom-container-base-opts-mem
    type: runSh
    runtime:
      architecture: aarch64
      cluster: x8664u16custom
      container: true
      options:
        imageName: drydockaarch64/u16pyt
        imageTag: master
        options: -m 300m
    steps:
      - IN: aarch64-custom-container-trigger
      - TASK:
          name: should-have-right-memory
          script:
            - docker ps -a
            - export IMG=$(docker inspect --format='{{.Config.Image}}' reqExec.$BUILD_JOB_ID.0)
            - test "$IMG" == "drydockaarch64/u16pyt:master"
            - docker inspect reqExec.$BUILD_JOB_ID.0
            - export MEM=$(docker inspect --format='{{.HostConfig.Memory}}' reqExec.$BUILD_JOB_ID.0)
            - test "$MEM" -eq 314572800
            
  - name: aarch64-opts-in-custom-container-task-opts-mem
    type: runSh
    runtime:
      architecture: aarch64
      cluster: x8664u16custom
      container: true
    steps:
      - IN: aarch64-custom-container-trigger
      - TASK:
          name: should-have-right-memory
          runtime:
            options:
              imageName: drydockaarch64/u16pyt
              imageTag: master
              options: -m 300m
          script:
            - docker ps -a
            - export IMG=$(docker inspect --format='{{.Config.Image}}' reqExec.$BUILD_JOB_ID.0)
            - test "$IMG" == "drydockaarch64/u16pyt:master"
            - docker inspect reqExec.$BUILD_JOB_ID.0
            - export MEM=$(docker inspect --format='{{.HostConfig.Memory}}' reqExec.$BUILD_JOB_ID.0)
            - test "$MEM" -eq 314572800

  - name: aarch64-opts-in-custom-container-base-opts-volume
    type: runSh
    runtime:
      architecture: aarch64
      cluster: x8664u16custom
      container: true
      options:
        imageName: drydockaarch64/u16pyt
        imageTag: master
        options: -v /root/hello:/greetings
    steps:
      - IN: aarch64-custom-container-trigger
      - TASK:
          name: should-have-right-volume-mounts
          script:
            - docker ps -a
            - export IMG=$(docker inspect --format='{{.Config.Image}}' reqExec.$BUILD_JOB_ID.0)
            - test "$IMG" == "drydockaarch64/u16pyt:master"
            - docker inspect reqExec.$BUILD_JOB_ID.0
            - test -f /greetings/hi.txt

    # Please run mkdir -p /root/hello; touch /root/hello/hi.txt
  - name: aarch64-opts-in-custom-container-task-opts-volume
    type: runSh
    runtime:
      architecture: aarch64
      cluster: x8664u16custom
      container: true
    steps:
      - IN: aarch64-custom-container-trigger
      - TASK:
          name: should-have-right-volume-mounts
          runtime:
            options:
              imageName: drydockaarch64/u16pyt
              imageTag: master
              options: -v /root/hello:/greetings
          script:
            - docker ps -a
            - export IMG=$(docker inspect --format='{{.Config.Image}}' reqExec.$BUILD_JOB_ID.0)
            - test "$IMG" == "drydockaarch64/u16pyt:master"
            - docker inspect reqExec.$BUILD_JOB_ID.0
            - test -f /greetings/hi.txt

  - name: aarch64-opts-in-custom-container-base-multi-opts
    type: runSh
    runtime:
      architecture: aarch64
      cluster: x8664u16custom
      container: true
      options:
        imageName: drydockaarch64/u16pyt
        imageTag: master
        options: -m 200mb -v /root/hello:/greetings
    steps:
      - IN: aarch64-custom-container-trigger
      - TASK:
          name: should-have-right-volume-mounts-n-memory
          script:
            - docker ps -a
            - export IMG=$(docker inspect --format='{{.Config.Image}}' reqExec.$BUILD_JOB_ID.0)
            - test "$IMG" == "drydockaarch64/u16pyt:master"
            - docker inspect reqExec.$BUILD_JOB_ID.0
            - test -f /greetings/hi.txt
            - export MEM=$(docker inspect --format='{{.HostConfig.Memory}}' reqExec.$BUILD_JOB_ID.0)
            - test "$MEM" -eq 209715200
            
  - name: aarch64-opts-in-custom-container-task-multi-opts
    type: runSh
    runtime:
      architecture: aarch64
      cluster: x8664u16custom
      container: true
    steps:
      - IN: aarch64-custom-container-trigger
      - TASK:
          name: should-have-right-volume-mounts-n-memory
          runtime:
            options:
              imageName: drydockaarch64/u16pyt
              imageTag: master
              options: -m 200mb -v /root/hello:/greetings
          script:
            - docker ps -a
            - export IMG=$(docker inspect --format='{{.Config.Image}}' reqExec.$BUILD_JOB_ID.0)
            - test "$IMG" == "drydockaarch64/u16pyt:master"
            - docker inspect reqExec.$BUILD_JOB_ID.0
            - test -f /greetings/hi.txt
            - export MEM=$(docker inspect --format='{{.HostConfig.Memory}}' reqExec.$BUILD_JOB_ID.0)
            - test "$MEM" -eq 209715200
